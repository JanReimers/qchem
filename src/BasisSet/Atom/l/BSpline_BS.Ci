// File: Atom/l/BSpline_BS.H BSpline Basis Set for atoms.

#include "Atom/l/BSpline_BS.H"
#include "Atom/l/BSpline_IBS.H"
#include "Atom/radial/BSpline/Rk.H"


namespace Atoml
{
namespace BSpline
{


template <size_t K> BasisSet<K>::BasisSet(size_t N, double rmin, double rmax, size_t LMax)
{
    for (size_t L=0;L<=LMax;L++)
        this->Insert(new Orbital_IBS<K>(this,N,rmin,rmax,L));
    this->BuildCache(LMax);
}

template <size_t K> Vector<double> BasisSet<K>::loop_4_direct(size_t id, size_t la, size_t lc)  const
    {
        Vector<double> rk(1);
        const Cacheable* c=Cache4::loop_4(id);
        const ::BSpline::RkEngine<K>* cd = dynamic_cast<const ::BSpline::RkEngine<K>*>(c);
        rk(1)= cd->Coulomb_R0();
        return rk;
    }


}} //namespace
